// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using oneparalyzer.LeasingSystem.Feedbacks.Infrastructure.Persistance;

#nullable disable

namespace oneparalyzer.LeasingSystem.Feedbacks.Infrastructure.Migrations
{
    [DbContext(typeof(FeedbacksDbContext))]
    [Migration("20230423144403_Feedbacks-Initial")]
    partial class FeedbacksInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("oneparalyzer.LeasingSystem.Feedbacks.Domain.AggregateModels.FeedbackAggregate.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FeedbackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("oneparalyzer.LeasingSystem.Feedbacks.Domain.AggregateModels.FeedbackAggregate.Feedback", b =>
                {
                    b.HasOne("oneparalyzer.LeasingSystem.Feedbacks.Domain.AggregateModels.FeedbackAggregate.Feedback", null)
                        .WithMany("Feedbacks")
                        .HasForeignKey("FeedbackId");
                });

            modelBuilder.Entity("oneparalyzer.LeasingSystem.Feedbacks.Domain.AggregateModels.FeedbackAggregate.Feedback", b =>
                {
                    b.Navigation("Feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
